{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/react/first-demo/src/components/TextForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TextForm() {\n  _s();\n  // function convertUpperCase(tex) {\n  //     console.log(tex);\n  // }   \n  const convertUpperCase = () => {\n    let newAddressText = address.toUpperCase();\n    setAddress(newAddressText);\n  };\n  const handleOnChange = ev => {\n    setAddress(ev.target.value);\n  };\n  const convertLowerCase = () => {\n    let lowerCase = address.toLowerCase();\n    setAddress(lowerCase);\n  };\n  const clearText = () => {\n    setAddress(\"\");\n  };\n  let modeStyle = {\n    color: \"black\",\n    backgroundColor: \"white\"\n  };\n  const changeMode = () => {\n    if (modeStyle.color == \"black\") {\n      setPchagne({\n        color: \"white\",\n        backgroundColor: \"black\"\n      });\n    } else {\n      setPchagne(modeStyle);\n    }\n  };\n  const [address, setAddress] = useState(''); // this is the hooks syntax \n  const [pchagne, setPchagne] = useState(modeStyle);\n\n  // setAddress(\"hii hardik updated address\"); // here we can se the address \n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      style: pchagne,\n      children: \"Lorem ipsum dolor sit amet consectetur, adipisicing elit. Voluptatum commodi mollitia ab vero perspiciatis fuga a aut quasi. Aliquid quibusdam non, quae recusandae assumenda doloribus omnis sint soluta a ea.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"exampleFormControlTextarea1\",\n      className: \"form-label\",\n      children: \"Text Area\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: address,\n      className: \"form-control\",\n      onChange: handleOnChange,\n      id: \"exampleFormControlTextarea1\",\n      rows: \"5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary mt-2\",\n      onClick: convertUpperCase,\n      children: \" Upper Case  \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-info mt-2 mx-2\",\n      onClick: convertLowerCase,\n      children: \" Lower Case \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-info mt-2 mx-2\",\n      onClick: clearText,\n      children: \" Clear \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-info mt-2 mx-2\",\n      onClick: changeMode,\n      children: \" Dark Mode  \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_s(TextForm, \"Ho1BSNG1J+B5d4v72hHZNhMVshc=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","TextForm","convertUpperCase","newAddressText","address","toUpperCase","setAddress","handleOnChange","ev","target","value","convertLowerCase","lowerCase","toLowerCase","clearText","modeStyle","color","backgroundColor","changeMode","setPchagne","pchagne"],"sources":["/Applications/MAMP/htdocs/react/first-demo/src/components/TextForm.jsx"],"sourcesContent":["import React, { useState } from 'react'\n\nexport default function TextForm() {\n\n\n    // function convertUpperCase(tex) {\n    //     console.log(tex);\n    // }   \n    const convertUpperCase = () => {\n        let newAddressText = address.toUpperCase();\n        setAddress(newAddressText);\n    }\n\n    const handleOnChange = (ev) => {\n        setAddress(ev.target.value);\n    }\n\n    const convertLowerCase = () => {\n        let lowerCase = address.toLowerCase();\n        setAddress(lowerCase);\n    }\n    const clearText = () => {\n        setAddress(\"\");\n    }\n\n\n    let modeStyle = {\n        color: \"black\",\n        backgroundColor: \"white\",\n    }\n\n    const changeMode = () => {\n        if (modeStyle.color == \"black\") {\n            setPchagne({\n                color: \"white\",\n                backgroundColor: \"black\",\n            });\n        } else {\n            setPchagne(modeStyle);\n        }\n\n    }\n\n\n    const [address, setAddress] = useState('');  // this is the hooks syntax \n    const [pchagne, setPchagne] = useState(modeStyle);\n\n    // setAddress(\"hii hardik updated address\"); // here we can se the address \n    return (\n        <div className='container'>\n            <p style={pchagne}>Lorem ipsum dolor sit amet consectetur, adipisicing elit. Voluptatum commodi mollitia ab vero perspiciatis fuga a aut quasi. Aliquid quibusdam non, quae recusandae assumenda doloribus omnis sint soluta a ea.</p>\n            <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\">Text Area</label>\n\n            <textarea value={address} className=\"form-control\" onChange={handleOnChange} id=\"exampleFormControlTextarea1\" rows=\"5\">\n\n            </textarea>\n\n\n            <button className='btn btn-primary mt-2' onClick={convertUpperCase} > Upper Case  </button>\n            <button className='btn btn-info mt-2 mx-2' onClick={convertLowerCase} > Lower Case </button>\n            <button className='btn btn-info mt-2 mx-2' onClick={clearText} > Clear </button>\n            <button className='btn btn-info mt-2 mx-2' onClick={changeMode} > Dark Mode  </button>\n        </div>\n    )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA;AAEvC,eAAe,SAASC,QAAQ,GAAG;EAAA;EAG/B;EACA;EACA;EACA,MAAMC,gBAAgB,GAAG,MAAM;IAC3B,IAAIC,cAAc,GAAGC,OAAO,CAACC,WAAW,EAAE;IAC1CC,UAAU,CAACH,cAAc,CAAC;EAC9B,CAAC;EAED,MAAMI,cAAc,GAAIC,EAAE,IAAK;IAC3BF,UAAU,CAACE,EAAE,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAMC,gBAAgB,GAAG,MAAM;IAC3B,IAAIC,SAAS,GAAGR,OAAO,CAACS,WAAW,EAAE;IACrCP,UAAU,CAACM,SAAS,CAAC;EACzB,CAAC;EACD,MAAME,SAAS,GAAG,MAAM;IACpBR,UAAU,CAAC,EAAE,CAAC;EAClB,CAAC;EAGD,IAAIS,SAAS,GAAG;IACZC,KAAK,EAAE,OAAO;IACdC,eAAe,EAAE;EACrB,CAAC;EAED,MAAMC,UAAU,GAAG,MAAM;IACrB,IAAIH,SAAS,CAACC,KAAK,IAAI,OAAO,EAAE;MAC5BG,UAAU,CAAC;QACPH,KAAK,EAAE,OAAO;QACdC,eAAe,EAAE;MACrB,CAAC,CAAC;IACN,CAAC,MAAM;MACHE,UAAU,CAACJ,SAAS,CAAC;IACzB;EAEJ,CAAC;EAGD,MAAM,CAACX,OAAO,EAAEE,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;EAC7C,MAAM,CAACoB,OAAO,EAAED,UAAU,CAAC,GAAGnB,QAAQ,CAACe,SAAS,CAAC;;EAEjD;EACA,oBACI;IAAK,SAAS,EAAC,WAAW;IAAA,wBACtB;MAAG,KAAK,EAAEK,OAAQ;MAAA,UAAC;IAA+M;MAAA;MAAA;MAAA;IAAA,QAAI,eACtO;MAAO,OAAO,EAAC,6BAA6B;MAAC,SAAS,EAAC,YAAY;MAAA,UAAC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAQ,eAErF;MAAU,KAAK,EAAEhB,OAAQ;MAAC,SAAS,EAAC,cAAc;MAAC,QAAQ,EAAEG,cAAe;MAAC,EAAE,EAAC,6BAA6B;MAAC,IAAI,EAAC;IAAG;MAAA;MAAA;MAAA;IAAA,QAE3G,eAGX;MAAQ,SAAS,EAAC,sBAAsB;MAAC,OAAO,EAAEL,gBAAiB;MAAA,UAAE;IAAa;MAAA;MAAA;MAAA;IAAA,QAAS,eAC3F;MAAQ,SAAS,EAAC,wBAAwB;MAAC,OAAO,EAAES,gBAAiB;MAAA,UAAE;IAAY;MAAA;MAAA;MAAA;IAAA,QAAS,eAC5F;MAAQ,SAAS,EAAC,wBAAwB;MAAC,OAAO,EAAEG,SAAU;MAAA,UAAE;IAAO;MAAA;MAAA;MAAA;IAAA,QAAS,eAChF;MAAQ,SAAS,EAAC,wBAAwB;MAAC,OAAO,EAAEI,UAAW;MAAA,UAAE;IAAY;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACpF;AAEd;AAAC,GA9DuBjB,QAAQ;AAAA,KAARA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}